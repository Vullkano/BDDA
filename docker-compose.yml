version: '3.8'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "50070:50070"
    
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075:50075"

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop2.7.4-java8
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
    env_file:
      - ./hadoop-hive.env

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432 resourcemanager:8088"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    ports:
      - "5432:5432"

  huedb:
    image: postgres:12.1-alpine
    volumes:
      - pg_data:/var/lib/postgresl/data/
    ports:
      - "5432"
    env_file:
      - ./hadoop-hive.env
    environment:
        SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432 resourcemanager:8088 hive-metastore:9083"
  
  hue:
    image: gethue/hue:4.6.0
    environment:
        SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432 resourcemanager:8088 hive-metastore:9083 huedb:5000"
    ports:
      - "8888:8888"
    volumes:
      - ./hue-overrides.ini:/usr/share/hue/desktop/conf/hue-overrides.ini
    links:
      - huedb

  # Zookeeper
  zookeeper:
    image: zookeeper:3.7
    container_name: zookeeper
    ports:
      - "2182:2181"
    networks:
      - hadoop_network

  # HBase
  hbase:
    image: harisekhon/hbase:1.3
    container_name: hbase
    ports:
      - "16010:16010"
      - "16000:16000"
      - "16201:16201"
      - "16020:16020"
      - "2181:2181"
      - "9090:9090" # Thrift API
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088 zookeeper:2182"
    volumes:
      - ./hbase-data:/hbase_data
      - ./hbase-site.xml:/opt/hbase/conf/hbase-site.xml
    depends_on:
      - namenode
      - datanode
      - resourcemanager
      - zookeeper
    networks:
      - hadoop_network

  # Apache Pig
  pig:
    image: moander/pig
    container_name: pig
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088 hbase:16000"
    depends_on:
      - namenode
      - datanode
      - resourcemanager
      - hbase
    volumes:
      - ./data/processed:/data/processed
      - ./pig-config:/opt/pig/conf
      - ./pig-scripts:/opt/pig/scripts
    command: /bin/bash -c "pig -x mapreduce"
    ports:
      - "18080:18080"
    stdin_open: true
    tty: true
    networks:
      - hadoop_network

  # PrestoDB
  presto:
    image: trinodb/trino:latest
    container_name: presto
    ports:
      - "8070:8070"
    networks:
      - hadoop_network

  # JupyterHub
  jupyterhub:
    build: .
    image: my_jupyterhub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
      - jupyterhub_data:/srv/jupyterhub/data
    ports:
      - "8000:8000"
    networks:
      - jupyterhub
      - hadoop_network


volumes:
  namenode:
  datanode:
  pg_data:
  hbase_data:
  jupyterhub_data:

networks:
  jupyterhub:
    name: jupyterhub
  hadoop_network:
    driver: bridge